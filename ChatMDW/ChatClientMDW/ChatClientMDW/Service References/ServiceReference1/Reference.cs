//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatClientMDW.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="ChatCallbacks", ConfigurationName="ServiceReference1.IChat", CallbackContract=typeof(ChatClientMDW.ServiceReference1.IChatCallback))]
    public interface IChat {
        
        [System.ServiceModel.OperationContractAttribute(Action="ChatCallbacks/IChat/AddMessage", ReplyAction="ChatCallbacks/IChat/AddMessageResponse")]
        void AddMessage(string playerName, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="ChatCallbacks/IChat/AddMessage", ReplyAction="ChatCallbacks/IChat/AddMessageResponse")]
        System.Threading.Tasks.Task AddMessageAsync(string playerName, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="ChatCallbacks/IChat/Subscribe", ReplyAction="ChatCallbacks/IChat/SubscribeResponse")]
        bool Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="ChatCallbacks/IChat/Subscribe", ReplyAction="ChatCallbacks/IChat/SubscribeResponse")]
        System.Threading.Tasks.Task<bool> SubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="ChatCallbacks/IChat/UnSubscribe", ReplyAction="ChatCallbacks/IChat/UnSubscribeResponse")]
        bool UnSubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="ChatCallbacks/IChat/UnSubscribe", ReplyAction="ChatCallbacks/IChat/UnSubscribeResponse")]
        System.Threading.Tasks.Task<bool> UnSubscribeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="ChatCallbacks/IChat/onMessageAdded")]
        void onMessageAdded(System.DateTime timestamp, string playerName, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatChannel : ChatClientMDW.ServiceReference1.IChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatClient : System.ServiceModel.DuplexClientBase<ChatClientMDW.ServiceReference1.IChat>, ChatClientMDW.ServiceReference1.IChat {
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AddMessage(string playerName, string message) {
            base.Channel.AddMessage(playerName, message);
        }
        
        public System.Threading.Tasks.Task AddMessageAsync(string playerName, string message) {
            return base.Channel.AddMessageAsync(playerName, message);
        }
        
        public bool Subscribe() {
            return base.Channel.Subscribe();
        }
        
        public System.Threading.Tasks.Task<bool> SubscribeAsync() {
            return base.Channel.SubscribeAsync();
        }
        
        public bool UnSubscribe() {
            return base.Channel.UnSubscribe();
        }
        
        public System.Threading.Tasks.Task<bool> UnSubscribeAsync() {
            return base.Channel.UnSubscribeAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="LoginContract", ConfigurationName="ServiceReference1.ILogin")]
    public interface ILogin {
        
        [System.ServiceModel.OperationContractAttribute(Action="LoginContract/ILogin/Login", ReplyAction="LoginContract/ILogin/LoginResponse")]
        bool Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="LoginContract/ILogin/Login", ReplyAction="LoginContract/ILogin/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="LoginContract/ILogin/Register", ReplyAction="LoginContract/ILogin/RegisterResponse")]
        void Register(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="LoginContract/ILogin/Register", ReplyAction="LoginContract/ILogin/RegisterResponse")]
        System.Threading.Tasks.Task RegisterAsync(string username, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginChannel : ChatClientMDW.ServiceReference1.ILogin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginClient : System.ServiceModel.ClientBase<ChatClientMDW.ServiceReference1.ILogin>, ChatClientMDW.ServiceReference1.ILogin {
        
        public LoginClient() {
        }
        
        public LoginClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public void Register(string username, string password) {
            base.Channel.Register(username, password);
        }
        
        public System.Threading.Tasks.Task RegisterAsync(string username, string password) {
            return base.Channel.RegisterAsync(username, password);
        }
    }
}
